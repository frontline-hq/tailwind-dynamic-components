// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`analyze > js > emitted files 1`] = `
Map {
  "FroHnY" => {
    "fileReference": "ref-tdc-FroHnY",
    "styles": Styles {
      "d": [Function],
      "dependencies": {
        "color": [
          "blue",
          "gray",
        ],
        "heights": [
          "one",
          "two",
        ],
      },
      "description": "b0is",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0is\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0is\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "UvbZZuJVSa" => {
    "fileReference": "ref-tdc-UvbZZuJVSa",
    "styles": Styles {
      "d": [Function],
      "dependencies": {
        "color": [
          "blue",
          "gray",
        ],
        "heights": [
          "one",
          "two",
        ],
      },
      "description": "b0is",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0is\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0is\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "DFutYsdTuNsmYdtaFQU" => {
    "fileReference": "ref-tdc-DFutYsdTuNsmYdtaFQU",
    "styles": Styles {
      "d": [Function],
      "dependencies": {
        "color": [
          "blue",
          "gray",
        ],
        "heights": [
          "one",
          "two",
        ],
      },
      "description": "b0is",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0is\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0is\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "FroGui" => {
    "fileReference": "ref-tdc-FroGui",
    "styles": Styles {
      "d": [Function],
      "dependencies": {},
      "description": "b0as",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0as\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0as\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "BFkFG" => {
    "fileReference": "ref-tdc-BFkFG",
    "styles": CompoundStyles {
      "add": [Function],
      "addInline": [Function],
      "compile": [Function],
      "description": "b0s",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0s\\$/g,
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0s\\$\\)/g,
      "propType": {},
      "styles": {
        "b0as": Styles {
          "d": [Function],
          "dependencies": {},
          "description": "b0as",
          "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0as\\$/g,
          "getV": [Function],
          "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
          "literalEncoding": "utf8",
          "matchDescription": [Function],
          "matchModifiers": [Function],
          "matchVariant": [Function],
          "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0as\\$\\)/g,
          "propType": [Function],
          "styles": [
            [],
            [],
          ],
          "variants": [],
          "variantsRegex": /\\^\\$/g,
        },
      },
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "USKtRmcqhVTaNLtGHTvY" => {
    "fileReference": "ref-tdc-USKtRmcqhVTaNLtGHTvY",
    "styles": Styles {
      "d": [Function],
      "dependencies": {},
      "description": "b0as",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0as\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0as\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
}
`;

exports[`analyze > svelte > emitted files 1`] = `
Map {
  "FroHnY" => {
    "fileReference": "ref-tdc-FroHnY",
    "styles": Styles {
      "d": [Function],
      "dependencies": {
        "color": [
          "blue",
          "gray",
        ],
        "heights": [
          "one",
          "two",
        ],
      },
      "description": "b0is",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0is\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0is\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "UvbZZuJVSa" => {
    "fileReference": "ref-tdc-UvbZZuJVSa",
    "styles": Styles {
      "d": [Function],
      "dependencies": {
        "color": [
          "blue",
          "gray",
        ],
        "heights": [
          "one",
          "two",
        ],
      },
      "description": "b0is",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0is\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0is\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "DFutYsdTuNsmYdtaFQU" => {
    "fileReference": "ref-tdc-DFutYsdTuNsmYdtaFQU",
    "styles": Styles {
      "d": [Function],
      "dependencies": {
        "color": [
          "blue",
          "gray",
        ],
        "heights": [
          "one",
          "two",
        ],
      },
      "description": "b0is",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0is\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0is\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "FroGui" => {
    "fileReference": "ref-tdc-FroGui",
    "styles": Styles {
      "d": [Function],
      "dependencies": {},
      "description": "b0as",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0as\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0as\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "BFkFG" => {
    "fileReference": "ref-tdc-BFkFG",
    "styles": CompoundStyles {
      "add": [Function],
      "addInline": [Function],
      "compile": [Function],
      "description": "b0s",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0s\\$/g,
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0s\\$\\)/g,
      "propType": {},
      "styles": {
        "b0as": Styles {
          "d": [Function],
          "dependencies": {},
          "description": "b0as",
          "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0as\\$/g,
          "getV": [Function],
          "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
          "literalEncoding": "utf8",
          "matchDescription": [Function],
          "matchModifiers": [Function],
          "matchVariant": [Function],
          "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0as\\$\\)/g,
          "propType": [Function],
          "styles": [
            [],
            [],
          ],
          "variants": [],
          "variantsRegex": /\\^\\$/g,
        },
      },
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
  "USKtRmcqhVTaNLtGHTvY" => {
    "fileReference": "ref-tdc-USKtRmcqhVTaNLtGHTvY",
    "styles": Styles {
      "d": [Function],
      "dependencies": {},
      "description": "b0as",
      "descriptionRegex": /\\(\\?<=\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\*\\)b0as\\$/g,
      "getV": [Function],
      "identifierAlphabet": "ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
      "literalEncoding": "utf8",
      "matchDescription": [Function],
      "matchModifiers": [Function],
      "matchVariant": [Function],
      "modifiersRegex": /\\^\\(\\[\\^\\\\t\\\\n\\\\r\\\\s:\\]\\+:\\)\\+\\(\\?=b0as\\$\\)/g,
      "propType": [Function],
      "styles": [
        [],
        [],
      ],
      "variants": [],
      "variantsRegex": /\\^\\$/g,
    },
  },
}
`;
